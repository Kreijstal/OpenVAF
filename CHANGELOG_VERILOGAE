# Changelog - OpenVAF OSDI

All notable changes to OpenVAF relevant to OSDI will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),

and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [unreleased]

### Added

- Add cargo-timings to .gitignore
- Added copyright for rustc/rust-analyzer
- Add arithmetic shift operator
- Add HIR body to CFG lowering
- Added copyright for dependencies
- Added nix flake
- Add back `nodes` and `module_name`
- Add automatic pypi publishing for verilogae
- Add python paths to gitignore
- Added build & test instructions to README
- Support vsrc, iprobe, idt and ddt

### Changed

- Rewrite frontend part 1
- Rewrite frontend part 2
- Vastly improved compile times:
- Check that inf is not used outside parameter constraints
- Independent def_maps for blocks
- HIR type representation
- Independent nackend
- HIR type inference
- Unified body queries
- HIR validation
- Separate locals and places
- Implemented const propagation
- Implement differential use algorithm
- Implement derivative generation
- Implement custom llvm wrapper
- Implement llvm codegen
- Implement program program dependence graph
- Implement VerilogAE
- Print message after successful compilation
- Implement new ssa-based MIR
- Switch to SSA based MIR
- Initial osdi implementation
- Implement residual generation
- Expose internals
- Improved inst combine pass
- Implement reactive matrix/rhs
- Simple limexp implementation
- Global value numbering
- Initial implementation
- Store reactive jacobian ptrs seperatly
- Implement CLI
- Parallel compilation
- First prototype

### Fixed

- Independent def_map for functions
- Do no parse arrays
- Incorrect syntax tree for function names
- Variable default value body
- Produce error for unsupported net types
- Data_flow crate
- Unkown format for higher order derivatives
- Correctly handle CLRF line endings
- Properly handle python pathlib paths
- Allow access to `group` and `description`
- Change internal functions to internal linkage
- Interpreter loop when calling callback
- Incorrect derivative metadata

### Removed

- Removed unused files
- Remove arithmetic shift operators
- Remove implicit control flow
- Remove outdated OSDI compiler

## 0.6.0 - 2022-06-20

Initial release of VerilogAE as a library

<!-- generated by git-cliff -->
