//! Generated by `generate_integration_tests`, do not edit by hand.


use sourcegen::{project_root, skip_slow_tests};

#[test]
fn bsim3() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("BSIM3").join("bsim3.va");
    super::full_compile(&root_file);
}
#[test]
fn bsim4() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("BSIM4").join("bsim4.va");
    super::full_compile(&root_file);
}
#[test]
fn bsim6() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("BSIM6").join("bsim6.va");
    super::full_compile(&root_file);
}
#[test]
fn bsimbulk() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("BSIMBULK").join("bsimbulk.va");
    super::full_compile(&root_file);
}
#[test]
fn bsimcmg() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("BSIMCMG").join("bsimcmg.va");
    super::full_compile(&root_file);
}
#[test]
fn bsimimg() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("BSIMIMG").join("bsimimg.va");
    super::full_compile(&root_file);
}
#[test]
fn bsimsoi() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("BSIMSOI").join("bsimsoi.va");
    super::full_compile(&root_file);
}
#[test]
fn cccs() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("CCCS").join("cccs.va");
    super::full_compile(&root_file);
}
#[test]
fn current_source() {
    if skip_slow_tests() {
        return;
    }
    let root_file =
        project_root().join("integration_tests").join("CURRENT_SOURCE").join("current_source.va");
    super::full_compile(&root_file);
}
#[test]
fn diode() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("DIODE").join("diode.va");
    super::full_compile(&root_file);
}
#[test]
fn diode_cmc() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("DIODE_CMC").join("diode_cmc.va");
    super::full_compile(&root_file);
}
#[test]
fn ekv() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("EKV").join("ekv.va");
    super::full_compile(&root_file);
}
#[test]
fn hicuml2() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("HICUML2").join("hicuml2.va");
    super::full_compile(&root_file);
}
#[test]
fn hisim2() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("HiSIM2").join("hisim2.va");
    super::full_compile(&root_file);
}
#[test]
fn hisimhv() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("HiSIMHV").join("hisimhv.va");
    super::full_compile(&root_file);
}
#[test]
fn hisimsotb() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("HiSIMSOTB").join("hisimsotb.va");
    super::full_compile(&root_file);
}
#[test]
fn mvsg_cmc() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("MVSG_CMC").join("mvsg_cmc.va");
    super::full_compile(&root_file);
}
#[test]
fn psp() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("PSP").join("psp.va");
    super::full_compile(&root_file);
}
#[test]
fn resistor() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("RESISTOR").join("resistor.va");
    super::full_compile(&root_file);
}
#[test]
fn vccs() {
    if skip_slow_tests() {
        return;
    }
    let root_file = project_root().join("integration_tests").join("VCCS").join("vccs.va");
    super::full_compile(&root_file);
}
