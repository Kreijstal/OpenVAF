default:
  image: 'rust:latest'
  cache: &global_cache
    key: ${CI_COMMIT_REF_SLUG}

    paths:
      - .cargo/
      - crates/target/

stages:
  - build
  - test
  - doc
  - deploy_doc


workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  APT_CACHE_DIR: $CI_PROJECT_DIR/apt
  RUSTDOCFLAGS: --enable-index-page -Zunstable-options

build:
  stage: build
  script:
    - cd crates
    - rustc --version
    - cargo --version
    - cargo update
    - cargo build --verbose

test:
  stage: test
  script:
    - cd crates
    - rustc --version
    - cargo --version
    - cd frontend
    - cargo test --verbose


test_fmt:
  stage: test

  before_script:
    - rustup component add rustfmt

  script:
    - cd crates
    - cargo fmt -- --check

  cache:
    <<: *global_cache
    policy: pull



test_clippy:
  stage: test

  before_script:
    - rustup component add clippy

  script:
    - cd crates
    - cargo clippy -- -D warnings


book:
  image:
    name: "peaceiris/mdbook:latest"
    entrypoint: [""]

  stage: doc
  script:
    - mdbook build book -d ../public

  artifacts:
    paths:
      - public

  cache: {}

rustdoc:
  image: "rustlang/rust:nightly"
  stage: doc
  script:
    - cd crates
    - cargo doc --workspace --document-private-items
    - cp -R target/doc ../dev_doc
    - cargo doc --workspace
    - cp -R target/doc ../api_doc

  artifacts:
    paths:
      - dev_doc
      - api_doc

  cache:
    <<: *global_cache
    key: documentation

pages:
  image: "alpine"

  stage: deploy_doc

  dependencies:
    - rustdoc
    - book

  script:
    - mv dev_doc public/dev_doc
    - mv api_doc public/api_doc

  artifacts:
    paths:
      - public

  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

  cache: {}


