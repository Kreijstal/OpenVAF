default:
  image: $CI_REGISTRY_IMAGE
  cache: &global_cache
    key: ${CI_COMMIT_REF_SLUG}

    paths:
      - .cargo/
      - compiler_lib/target/
      - test/target/


stages:
  - test
  - doc
  - deploy_doc


workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  APT_CACHE_DIR: $CI_PROJECT_DIR/apt


test:
  stage: test
  script:
    - cd test
    - scl enable llvm-toolset-7.0 devtoolset-9 "cargo run -- --src-dirs ../test"


test_clippy:
  stage: test

  before_script:
    - rustup component add rustfmt

  script:
    - echo "Checking OpenVAF"
    - cd compiler_lib
    -  scl enable llvm-toolset-7.0 devtoolset-9 "cargo clippy -- -D warnings"
#    - echo "Checking OSDI" OSDI is not ready yet
#    - cd ../osdi
#    -  scl enable llvm-toolset-7.0 devtoolset-9 "cargo clippy -- -D warnings"
#    - echo "Checking OSDIC"
#    - cd ../osdic
#    -  scl enable llvm-toolset-7.0 devtoolset-9 "cargo clippy -- -D warnings"
    - echo "Checking Test suite"
    - cd ../test
    -  scl enable llvm-toolset-7.0 devtoolset-9 "cargo clippy -- -D warnings"
  cache:
    <<: *global_cache
    policy: pull

test_fmt:
  stage: test

  before_script:
    - rustup component add rustfmt

  script:
    - echo "Checking OpenVAF"
    - cd compiler_lib
    - cargo fmt -- --check
    - echo "Checking Test suite"
    - cd ../test
    - cargo  fmt -- --check
  cache:
    <<: *global_cache
    policy: pull



book:
  image:
    name: "peaceiris/mdbook:latest"
    entrypoint: [""]

  stage: doc
  script:
    - mdbook build book -d ../public

  artifacts:
    paths:
      - public

  cache: {}

rustdoc:
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
    APT_CACHE_DIR: $CI_PROJECT_DIR/apt
    RUSTDOCFLAGS: --enable-index-page -Zunstable-options

  image: "rustlang/rust:nightly"
  stage: doc
  script:
    - cd compiler_lib
    - cargo doc --workspace --document-private-items
    - cp -R target/doc ../dev_doc
    - cargo doc --workspace
    - cp -R target/doc ../api_doc

  artifacts:
    paths:
      - dev_doc
      - api_doc

  cache:
    <<: *global_cache
    key: documentation

pages:
  image: "alpine"

  stage: deploy_doc

  dependencies:
    - rustdoc
    - book

  script:
    - mv dev_doc public/dev_doc
    - mv api_doc public/api_doc

  artifacts:
    paths:
      - public

  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

  cache: {}


