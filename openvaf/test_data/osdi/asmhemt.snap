param "$mfactor"
units = "", desc = "Multiplier (Verilog-A $mfactor)", flags = ParameterFlags(PARA_KIND_INST)
param "l"
units = "m", desc = " Channel Length", flags = ParameterFlags(PARA_KIND_INST)
param "w"
units = "m", desc = " Channel Width", flags = ParameterFlags(PARA_KIND_INST)
param "nf"
units = "", desc = " Number of fingers", flags = ParameterFlags(PARA_TY_INT | PARA_KIND_INST)
param "dfp1"
units = "m", desc = " Distance of FP1 from 2-DEG Charge", flags = ParameterFlags(PARA_KIND_INST)
param "lfp1"
units = "m", desc = " Length of FP1", flags = ParameterFlags(PARA_KIND_INST)
param "dfp2"
units = "m", desc = " Distance of FP2 from 2-DEG Charge", flags = ParameterFlags(PARA_KIND_INST)
param "lfp2"
units = "m", desc = " Length of FP2", flags = ParameterFlags(PARA_KIND_INST)
param "dfp3"
units = "m", desc = " Distance of FP3 from 2-DEG Charge", flags = ParameterFlags(PARA_KIND_INST)
param "lfp3"
units = "m", desc = " Length of FP3", flags = ParameterFlags(PARA_KIND_INST)
param "dfp4"
units = "m", desc = " Distance of FP4 from 2-DEG Charge", flags = ParameterFlags(PARA_KIND_INST)
param "lfp4"
units = "m", desc = " Length of FP4", flags = ParameterFlags(PARA_KIND_INST)
param "ngcon"
units = "", desc = " Number of gate contacts", flags = ParameterFlags(PARA_TY_INT | PARA_KIND_INST)
param "tnom"
units = "K", desc = " Nominal Temperature in degree Celsius", flags = ParameterFlags(0x0)
param "tbar"
units = "m", desc = " Barrier layer thickness", flags = ParameterFlags(0x0)
param "epsilon"
units = "F/m", desc = " Dielectric Permittivity of AlGaN layer", flags = ParameterFlags(0x0)
param "voff"
units = "V", desc = " Cut-off voltage", flags = ParameterFlags(0x0)
param "u0"
units = "m^2/(V * s)", desc = " Low field mobility", flags = ParameterFlags(0x0)
param "ua"
units = "V^-1", desc = " Mobility Degradation coefficient first order", flags = ParameterFlags(0x0)
param "ub"
units = "V^-2", desc = " Mobility Degradation coefficient second order", flags = ParameterFlags(0x0)
param "vsat"
units = "m/s", desc = " Saturation Velocity", flags = ParameterFlags(0x0)
param "delta"
units = "", desc = " Exponent for Vdeff", flags = ParameterFlags(0x0)
param "at"
units = "", desc = " Temperature Dependence for saturation velocity", flags = ParameterFlags(0x0)
param "ute"
units = "", desc = " Temperature dependence of mobility", flags = ParameterFlags(0x0)
param "lambda"
units = "V^-1", desc = " Channel Length Modulation Coefficient", flags = ParameterFlags(0x0)
param "eta0"
units = "", desc = " DIBL Parameter", flags = ParameterFlags(0x0)
param "vdscale"
units = "V", desc = " DIBL Scaling VDS", flags = ParameterFlags(0x0)
param "kt1"
units = "", desc = " Temperature Dependence for Voff", flags = ParameterFlags(0x0)
param "thesat"
units = "V^-2", desc = " Velocity Saturation Parameter", flags = ParameterFlags(0x0)
param "nfactor"
units = "", desc = " Sub-voff Slope parameters", flags = ParameterFlags(0x0)
param "cdscd"
units = "", desc = " Sub-voff Slope Change due to Drain Voltage", flags = ParameterFlags(0x0)
param "gamma0i"
units = "", desc = " Schrodinger-Poisson solution parameter", flags = ParameterFlags(0x0)
param "gamma1i"
units = "", desc = " Schrodinger-Poisson solution parameter", flags = ParameterFlags(0x0)
param "imin"
units = "A", desc = " Minimum Drain Current", flags = ParameterFlags(0x0)
param "shmod"
units = "", desc = " Switch to turn on and off self-heating model", flags = ParameterFlags(PARA_TY_INT)
param "rth0"
units = "K/w", desc = " Thermal Resistance", flags = ParameterFlags(0x0)
param "cth0"
units = "s*w/K", desc = " Thermal Capacitance", flags = ParameterFlags(0x0)
param "rdsmod"
units = "", desc = " Switch for external source and drain resistances", flags = ParameterFlags(PARA_TY_INT)
param "vsataccs"
units = "cm/s", desc = " Saturation Velocity for access region: Source Side", flags = ParameterFlags(0x0)
param "ns0accs"
units = "C/m^-2", desc = " 2-DEG Charge Density in per square meter in Source access region", flags = ParameterFlags(0x0)
param "ns0accd"
units = "C/m^-2", desc = " 2-DEG Charge Density in per square meter in Drain access region", flags = ParameterFlags(0x0)
param "k0accs"
units = "", desc = " Vg dependence parameter of source side access region 2-DEG charge density", flags = ParameterFlags(0x0)
param "k0accd"
units = "", desc = " Vg dependence parameter of drain side access region 2-DEG charge density", flags = ParameterFlags(0x0)
param "u0accs"
units = "m^2/(V * s)", desc = " Access region mobility source-side", flags = ParameterFlags(0x0)
param "u0accd"
units = "m^2/(V * s)", desc = " Access region mobility drain-side", flags = ParameterFlags(0x0)
param "mexpaccs"
units = "", desc = " Exponent for access region resistance model", flags = ParameterFlags(0x0)
param "mexpaccd"
units = "", desc = " Exponent for access region resistance model", flags = ParameterFlags(0x0)
param "lsg"
units = "m", desc = " Length of Source-Gate Access Region", flags = ParameterFlags(0x0)
param "ldg"
units = "m", desc = " Length of Drain-Gate Access Region or Length of drain side access region", flags = ParameterFlags(0x0)
param "rsc"
units = "ohm*m", desc = " Source Contact Resistance", flags = ParameterFlags(0x0)
param "rdc"
units = "ohm*m", desc = " Drain Contact Resistance", flags = ParameterFlags(0x0)
param "kns0"
units = "", desc = " Temperature Dependence for 2-DEG charge density at access region", flags = ParameterFlags(0x0)
param "ats"
units = "", desc = " Temperature Dependence for saturation velocity at access region", flags = ParameterFlags(0x0)
param "utes"
units = "", desc = " Temperature dependence of mobility at access region: Source Side", flags = ParameterFlags(0x0)
param "uted"
units = "", desc = " Temperature dependence of mobility at access region: Drain Side", flags = ParameterFlags(0x0)
param "krsc"
units = "", desc = " Temperature dependence of Source Contact Resistance", flags = ParameterFlags(0x0)
param "krdc"
units = "", desc = " Temperature dependence of Drain Contact Resistance", flags = ParameterFlags(0x0)
param "gatemod"
units = "", desc = " Gate current model flag [0: No gate current; 1: Basic model]", flags = ParameterFlags(PARA_TY_INT)
param "njgs"
units = "", desc = " Gate-source junction diode current ideality factor", flags = ParameterFlags(0x0)
param "njgd"
units = "", desc = " Gate-drain junction diode current ideality factor", flags = ParameterFlags(0x0)
param "igsdio"
units = "A/m^2", desc = " Gate-source junction diode saturation current", flags = ParameterFlags(0x0)
param "igddio"
units = "A/m^2", desc = " Gate-drain junction diode saturation current", flags = ParameterFlags(0x0)
param "ktgs"
units = "", desc = " Temperature co-efficient of gate-source junction diode current", flags = ParameterFlags(0x0)
param "ktgd"
units = "", desc = " Temperature coefficient of gate-drain junction diode current", flags = ParameterFlags(0x0)
param "trapmod"
units = "", desc = " Model Switch to turn on and off the dynamic trapping effects", flags = ParameterFlags(PARA_TY_INT)
param "cdlag"
units = "", desc = " Trap Network capacitance", flags = ParameterFlags(0x0)
param "rdlag"
units = "", desc = " Trap Network resistance", flags = ParameterFlags(0x0)
param "idio"
units = "A", desc = " Saturation Current parameter for trap model", flags = ParameterFlags(0x0)
param "atrapvoff"
units = "", desc = " Voff change due to trapping effects", flags = ParameterFlags(0x0)
param "btrapvoff"
units = "", desc = " Voff change with input power due to trapping effects", flags = ParameterFlags(0x0)
param "atrapeta0"
units = "", desc = " DIBL change due to trapping effects", flags = ParameterFlags(0x0)
param "btrapeta0"
units = "", desc = " DIBL change with input power due to trapping effects", flags = ParameterFlags(0x0)
param "atraprs"
units = "", desc = " Rs change due to trapping effects", flags = ParameterFlags(0x0)
param "btraprs"
units = "", desc = " Rs change with input power due to trapping effects", flags = ParameterFlags(0x0)
param "atraprd"
units = "", desc = " Rd change due to trapping effects", flags = ParameterFlags(0x0)
param "btraprd"
units = "", desc = " Rd change with input power due to trapping effects", flags = ParameterFlags(0x0)
param "rtrap1"
units = "ohm", desc = " Trap Network1 Resistance", flags = ParameterFlags(0x0)
param "rtrap2"
units = "ohm", desc = " Trap Network2 Resistance", flags = ParameterFlags(0x0)
param "ctrap1"
units = "F", desc = " Trap Network1 Capacitance", flags = ParameterFlags(0x0)
param "ctrap2"
units = "F", desc = " Trap Network2 Capacitance", flags = ParameterFlags(0x0)
param "a1"
units = "", desc = " Multiplication factor [1st network]", flags = ParameterFlags(0x0)
param "vofftr"
units = "", desc = " Trap contribution to voff [2nd network]", flags = ParameterFlags(0x0)
param "cdscdtr"
units = "", desc = " Trap contribution to cdscd [2nd network]", flags = ParameterFlags(0x0)
param "eta0tr"
units = "", desc = " Trap contribution to DIBL [2nd network]", flags = ParameterFlags(0x0)
param "rontr1"
units = "", desc = " Trap contribution to RON [1st network]", flags = ParameterFlags(0x0)
param "rontr2"
units = "", desc = " Trap contribution to RON [2nd network]", flags = ParameterFlags(0x0)
param "rontr3"
units = "", desc = " Trap contribution to RON", flags = ParameterFlags(0x0)
param "rtrap3"
units = "ohm", desc = " Trap Network Resistance", flags = ParameterFlags(0x0)
param "ctrap3"
units = "F", desc = " Trap Network Capacitance", flags = ParameterFlags(0x0)
param "vatrap"
units = "", desc = " Division factor for V[trap1]", flags = ParameterFlags(0x0)
param "wd"
units = "", desc = " Weak dependence of vdlr1 on Vdg", flags = ParameterFlags(0x0)
param "vdlr1"
units = "", desc = " Slope for region one", flags = ParameterFlags(0x0)
param "vdlr2"
units = "", desc = " Slope for region two", flags = ParameterFlags(0x0)
param "talpha"
units = "", desc = " Temperature dependence Coefficient", flags = ParameterFlags(0x0)
param "vtb"
units = "V", desc = " Break Point for Vdg effect on Von", flags = ParameterFlags(0x0)
param "deltax"
units = "", desc = " Smoothing parameter", flags = ParameterFlags(0x0)
param "fp1mod"
units = "", desc = " Field Plate Model Selector [0:No FP; 1:Gate FP; 2:Source FP;]", flags = ParameterFlags(PARA_TY_INT)
param "fp2mod"
units = "", desc = " Field Plate Model Selector [0:No FP; 1:Gate FP; 2:Source FP;]", flags = ParameterFlags(PARA_TY_INT)
param "fp3mod"
units = "", desc = " Field Plate Model Selector [0:No FP; 1:Gate FP; 2:Source FP;]", flags = ParameterFlags(PARA_TY_INT)
param "fp4mod"
units = "", desc = " Field Plate Model Selector [0:No FP; 1:Gate FP; 2:Source FP;]", flags = ParameterFlags(PARA_TY_INT)
param "iminfp1"
units = "A", desc = " Minimum Drain Current FP1 region", flags = ParameterFlags(0x0)
param "vofffp1"
units = "V", desc = " voff for FP1", flags = ParameterFlags(0x0)
param "ktfp1"
units = "", desc = " Temperature Dependence for vofffp1", flags = ParameterFlags(0x0)
param "u0fp1"
units = "m^2/(V * s)", desc = " FP1 region mobility", flags = ParameterFlags(0x0)
param "vsatfp1"
units = "m/s", desc = " Saturation Velocity of FP1 region", flags = ParameterFlags(0x0)
param "nfactorfp1"
units = "", desc = " Sub-voff Slope parameters for FP1", flags = ParameterFlags(0x0)
param "cdscdfp1"
units = "", desc = " Sub-voff Slope Change due to Drain Voltage for FP1", flags = ParameterFlags(0x0)
param "eta0fp1"
units = "", desc = " DIBL Parameter for FP1", flags = ParameterFlags(0x0)
param "vdscalefp1"
units = "V", desc = " DIBL Scaling VDS for FP1", flags = ParameterFlags(0x0)
param "gamma0fp1"
units = "", desc = " Schrodinger-Poisson solution parameter for FP1", flags = ParameterFlags(0x0)
param "gamma1fp1"
units = "", desc = " Schrodinger-Poisson solution parameter for FP1", flags = ParameterFlags(0x0)
param "iminfp2"
units = "A", desc = " Minimum Drain Current FP2 region", flags = ParameterFlags(0x0)
param "vofffp2"
units = "V", desc = " voff for FP2", flags = ParameterFlags(0x0)
param "ktfp2"
units = "", desc = " Temperature Dependence for vofffp2", flags = ParameterFlags(0x0)
param "u0fp2"
units = "m^2/(V * s)", desc = " Carrier mobility of FP2 region", flags = ParameterFlags(0x0)
param "vsatfp2"
units = "m/s", desc = " Saturation velocity of FP2 region", flags = ParameterFlags(0x0)
param "nfactorfp2"
units = "", desc = " Sub-voff Slope parameters for FP2", flags = ParameterFlags(0x0)
param "cdscdfp2"
units = "", desc = " Sub-voff Slope Change due to Drain Voltage for FP2", flags = ParameterFlags(0x0)
param "eta0fp2"
units = "", desc = " DIBL Parameter for FP2", flags = ParameterFlags(0x0)
param "vdscalefp2"
units = "V", desc = " DIBL Scaling VDS for FP2", flags = ParameterFlags(0x0)
param "gamma0fp2"
units = "", desc = " Schrodinger-Poisson solution parameter for FP2", flags = ParameterFlags(0x0)
param "gamma1fp2"
units = "", desc = " Schrodinger-Poisson solution parameter for FP2", flags = ParameterFlags(0x0)
param "iminfp3"
units = "A", desc = " Minimum Drain Current FP3 region", flags = ParameterFlags(0x0)
param "vofffp3"
units = "V", desc = " voff for FP3", flags = ParameterFlags(0x0)
param "ktfp3"
units = "", desc = " Temperature Dependence for vofffp3", flags = ParameterFlags(0x0)
param "u0fp3"
units = "m^2/(V * s)", desc = " FP3 region mobility", flags = ParameterFlags(0x0)
param "vsatfp3"
units = "m/s", desc = " Saturation Velocity of FP3 region", flags = ParameterFlags(0x0)
param "nfactorfp3"
units = "", desc = " Sub-voff Slope parameters for FP3", flags = ParameterFlags(0x0)
param "cdscdfp3"
units = "", desc = " Sub-voff Slope Change due to Drain Voltage for FP3", flags = ParameterFlags(0x0)
param "eta0fp3"
units = "", desc = " DIBL Parameter for FP3", flags = ParameterFlags(0x0)
param "vdscalefp3"
units = "V", desc = " DIBL Scaling VDS for FP3", flags = ParameterFlags(0x0)
param "gamma0fp3"
units = "", desc = " Schrodinger-Poisson solution parameter for FP3", flags = ParameterFlags(0x0)
param "gamma1fp3"
units = "", desc = " Schrodinger-Poisson solution parameter for FP3", flags = ParameterFlags(0x0)
param "iminfp4"
units = "A", desc = " Minimum Drain Current FP4 region", flags = ParameterFlags(0x0)
param "vofffp4"
units = "V", desc = " voff for FP4", flags = ParameterFlags(0x0)
param "ktfp4"
units = "", desc = " Temperature Dependence for vofffp4", flags = ParameterFlags(0x0)
param "u0fp4"
units = "m^2/(V * s)", desc = " FP4 region mobility", flags = ParameterFlags(0x0)
param "vsatfp4"
units = "m/s", desc = " Saturation Velocity of FP4 region", flags = ParameterFlags(0x0)
param "nfactorfp4"
units = "", desc = " Sub-voff Slope parameters for FP4", flags = ParameterFlags(0x0)
param "cdscdfp4"
units = "", desc = " Sub-voff Slope Change due to Drain Voltage for FP4", flags = ParameterFlags(0x0)
param "eta0fp4"
units = "", desc = " DIBL Parameter for FP4", flags = ParameterFlags(0x0)
param "vdscalefp4"
units = "V", desc = " DIBL Scaling VDS for FP4", flags = ParameterFlags(0x0)
param "gamma0fp4"
units = "", desc = " Schrodinger-Poisson solution parameter for FP4", flags = ParameterFlags(0x0)
param "gamma1fp4"
units = "", desc = " Schrodinger-Poisson solution parameter for FP4", flags = ParameterFlags(0x0)
param "cgso"
units = "F", desc = " Gate-source overlap capacitance", flags = ParameterFlags(0x0)
param "cgdo"
units = "F", desc = " Gate-drain overlap capacitance", flags = ParameterFlags(0x0)
param "cdso"
units = "F", desc = " Cds capacitance parameter", flags = ParameterFlags(0x0)
param "cgdl"
units = "F", desc = " Vds bias dependence of parasitic gate drain overlap capacitance", flags = ParameterFlags(0x0)
param "vdsatcv"
units = "V", desc = " Saturation voltage on drain side in CV Model", flags = ParameterFlags(0x0)
param "cbdo"
units = "F", desc = " Substrate capacitance parameter", flags = ParameterFlags(0x0)
param "cbso"
units = "F", desc = " Substrate capacitance parameter", flags = ParameterFlags(0x0)
param "cbgo"
units = "F", desc = " Substrate capacitance parameter", flags = ParameterFlags(0x0)
param "cfg"
units = "F", desc = " Fringing capacitance parameter", flags = ParameterFlags(0x0)
param "cfd"
units = "F", desc = " Fringing capacitance parameter", flags = ParameterFlags(0x0)
param "cfgd"
units = "F", desc = " Fringing capacitance parameter", flags = ParameterFlags(0x0)
param "cfgdsm"
units = "F", desc = " Capacitance smoothing parameter", flags = ParameterFlags(0x0)
param "cfgd0"
units = "F", desc = " Fringing capacitance parameter", flags = ParameterFlags(0x0)
param "cj0"
units = "F", desc = " Zero bias depletion capacitance", flags = ParameterFlags(0x0)
param "vbi"
units = "V", desc = " Built in potential", flags = ParameterFlags(0x0)
param "ktvbi"
units = "", desc = " Temperature dependence of built in potential", flags = ParameterFlags(0x0)
param "ktcfg"
units = "", desc = " Temperature dependence of Fringing capacitance", flags = ParameterFlags(0x0)
param "ktcfgd"
units = "", desc = " Temperature dependence of Fringing capacitance", flags = ParameterFlags(0x0)
param "mz"
units = "", desc = " Grading factor of depletion capacitance", flags = ParameterFlags(0x0)
param "aj"
units = "", desc = " Limiting factor of depletion capacitance in forward bias region", flags = ParameterFlags(0x0)
param "dj"
units = "", desc = " Fitting parameter ", flags = ParameterFlags(0x0)
param "adosi"
units = "", desc = " Quantum mechanical effect pre-factor cum switch in inversion", flags = ParameterFlags(0x0)
param "bdosi"
units = "", desc = " Charge centroid parameter - slope of CV curve under QME in inversion", flags = ParameterFlags(0x0)
param "qm0i"
units = "", desc = " Charge centroid parameter - starting point for QME in inversion", flags = ParameterFlags(0x0)
param "adosfp1"
units = "", desc = " Quantum mechanical effect pre-factor cum switch in inversion", flags = ParameterFlags(0x0)
param "bdosfp1"
units = "", desc = " Charge centroid parameter - slope of CV curve under QME in inversion", flags = ParameterFlags(0x0)
param "qm0fp1"
units = "", desc = " Charge centroid parameter - starting point for QME in inversion", flags = ParameterFlags(0x0)
param "adosfp2"
units = "", desc = " Quantum mechanical effect pre-factor cum switch in inversion", flags = ParameterFlags(0x0)
param "bdosfp2"
units = "", desc = " Charge centroid parameter - slope of CV curve under QME in inversion", flags = ParameterFlags(0x0)
param "qm0fp2"
units = "", desc = " Charge centroid parameter - starting point for QME in inversion", flags = ParameterFlags(0x0)
param "adosfp3"
units = "", desc = " Quantum mechanical effect pre-factor cum switch in inversion", flags = ParameterFlags(0x0)
param "bdosfp3"
units = "", desc = " Charge centroid parameter - slope of CV curve under QME in inversion", flags = ParameterFlags(0x0)
param "qm0fp3"
units = "", desc = " Charge centroid parameter - starting point for QME in inversion", flags = ParameterFlags(0x0)
param "adosfp4"
units = "", desc = " Quantum mechanical effect pre-factor cum switch in inversion", flags = ParameterFlags(0x0)
param "bdosfp4"
units = "", desc = " Charge centroid parameter - slope of CV curve under QME in inversion", flags = ParameterFlags(0x0)
param "qm0fp4"
units = "", desc = " Charge centroid parameter - starting point for QME in inversion", flags = ParameterFlags(0x0)
param "cfp1scale"
units = "", desc = " Coupling of charge under FP1", flags = ParameterFlags(0x0)
param "cfp2scale"
units = "", desc = " Coupling of charge under FP2", flags = ParameterFlags(0x0)
param "cfp3scale"
units = "", desc = " Coupling of charge under FP3", flags = ParameterFlags(0x0)
param "cfp4scale"
units = "", desc = " Coupling of charge under FP4", flags = ParameterFlags(0x0)
param "csubscalei"
units = "", desc = " Sub Capacitance scaling parameter", flags = ParameterFlags(0x0)
param "csubscale1"
units = "", desc = " Sub Capacitance scaling parameter", flags = ParameterFlags(0x0)
param "csubscale2"
units = "", desc = " Sub Capacitance scaling parameter", flags = ParameterFlags(0x0)
param "csubscale3"
units = "", desc = " Sub Capacitance scaling parameter", flags = ParameterFlags(0x0)
param "csubscale4"
units = "", desc = " Sub Capacitance scaling parameter", flags = ParameterFlags(0x0)
param "rgatemod"
units = "", desc = " Switch to turn on/off gate Resistance", flags = ParameterFlags(PARA_TY_INT)
param "xgw"
units = "m", desc = " Distance from gate contact centre to dev edge", flags = ParameterFlags(0x0)
param "rshg"
units = "ohm/square", desc = " Gate sheet resistance", flags = ParameterFlags(0x0)
param "fnmod"
units = "", desc = " Switch to turn Flicker Noise Model  ON [fnmod=1] or OFF [fnmod=0]", flags = ParameterFlags(PARA_TY_INT)
param "tnmod"
units = "", desc = " Switch to turn Thermal Noise Model  ON [tnmod=1] or OFF [tnmod=0]", flags = ParameterFlags(PARA_TY_INT)
param "noia"
units = "", desc = " Flicker Noise parameter", flags = ParameterFlags(0x0)
param "noib"
units = "", desc = " Flicker Noise parameter", flags = ParameterFlags(0x0)
param "noic"
units = "", desc = " Flicker Noise parameter", flags = ParameterFlags(0x0)
param "ef"
units = "", desc = " Exponent of frequency---Determines slope in log plot", flags = ParameterFlags(0x0)
param "tnsc"
units = "", desc = " Thermal noise scaling parameter", flags = ParameterFlags(0x0)
param "gdsmin"
units = "S", desc = " Convergence Parameter", flags = ParameterFlags(0x0)

5 terminals
node "d" units = "V", runits = ""
residual 2792 2800 4294967295 4294967295
node "g" units = "V", runits = ""
residual 2808 2816 4294967295 4294967295
node "s" units = "V", runits = ""
residual 2824 2832 4294967295 4294967295
node "b" units = "V", runits = ""
residual 4294967295 2840 4294967295 4294967295
node "dt" units = "K", runits = ""
residual 2848 2856 4294967295 4294967295
node "trap1" units = "V", runits = ""
residual 2864 2872 4294967295 4294967295
node "trap2" units = "V", runits = ""
residual 2880 2888 4294967295 4294967295
node "di" units = "V", runits = ""
residual 2896 2904 4294967295 4294967295
node "si" units = "V", runits = ""
residual 2912 2920 4294967295 4294967295
node "gi" units = "V", runits = ""
residual 2928 2936 4294967295 4294967295
node "fp1" units = "V", runits = ""
residual 2944 2952 4294967295 4294967295
node "fp2" units = "V", runits = ""
residual 2960 2968 4294967295 4294967295
node "fp3" units = "V", runits = ""
residual 2976 2984 4294967295 4294967295
node "fp4" units = "V", runits = ""
residual 2992 3000 4294967295 4294967295
node(flow) "flow(di,si)" units = "A", runits = ""
residual 3008 3016 4294967295 4294967295
node "implicit_equation_0" units = "", runits = ""
residual 3024 3032 4294967295 4294967295
jacobian (d, d) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1144
jacobian (d, g) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1152
jacobian (d, s) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1160
jacobian (d, b) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1168
jacobian (d, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1176
jacobian (d, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (d, trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (d, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (d, si) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (d, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (d, fp4) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (g, d) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1184
jacobian (g, g) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1192
jacobian (g, s) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1200
jacobian (g, b) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1208
jacobian (g, dt) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1216
jacobian (g, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (s, d) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1224
jacobian (s, g) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1232
jacobian (s, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1240
jacobian (s, b) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1248
jacobian (s, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1256
jacobian (s, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (s, trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1264
jacobian (s, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1272
jacobian (s, si) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1280
jacobian (s, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1288
jacobian (s, fp1) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1296
jacobian (s, fp2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1304
jacobian (s, fp3) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1312
jacobian (s, fp4) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1320
jacobian (b, d) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1328
jacobian (b, g) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1336
jacobian (b, s) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1344
jacobian (b, b) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1352
jacobian (b, dt) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1360
jacobian (b, trap1) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1368
jacobian (b, trap2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1376
jacobian (b, di) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1384
jacobian (b, si) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1392
jacobian (b, gi) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1400
jacobian (b, fp1) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1408
jacobian (b, fp2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1416
jacobian (b, fp3) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1424
jacobian (b, fp4) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1432
jacobian (dt, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1440
jacobian (dt, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, si) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, fp1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, fp2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, fp3) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (dt, fp4) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap1, d) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap1, g) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap1, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap1, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1448
jacobian (trap1, trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap1, implicit_equation_0) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap2, d) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap2, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap2, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (trap2, trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1456
jacobian (di, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1464
jacobian (di, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1472
jacobian (di, trap2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1480
jacobian (di, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1488
jacobian (di, si) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1496
jacobian (di, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1504
jacobian (di, fp1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1512
jacobian (di, flow(di,si)) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_RESIST_CONST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (si, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (si, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1520
jacobian (si, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1528
jacobian (si, trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1536
jacobian (si, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1544
jacobian (si, si) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1552
jacobian (si, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1560
jacobian (si, flow(di,si)) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (gi, g) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (gi, s) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1568
jacobian (gi, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1576
jacobian (gi, trap1) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1584
jacobian (gi, trap2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1592
jacobian (gi, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1600
jacobian (gi, si) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1608
jacobian (gi, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1616
jacobian (gi, fp1) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1624
jacobian (gi, fp2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1632
jacobian (gi, fp3) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1640
jacobian (gi, fp4) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1648
jacobian (fp1, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1656
jacobian (fp1, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1664
jacobian (fp1, trap2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1672
jacobian (fp1, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1680
jacobian (fp1, si) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1688
jacobian (fp1, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1696
jacobian (fp1, fp1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1704
jacobian (fp1, fp2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1712
jacobian (fp2, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1720
jacobian (fp2, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1728
jacobian (fp2, trap2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1736
jacobian (fp2, di) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1744
jacobian (fp2, si) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1752
jacobian (fp2, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1760
jacobian (fp2, fp1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1768
jacobian (fp2, fp2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1776
jacobian (fp2, fp3) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1784
jacobian (fp3, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1792
jacobian (fp3, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1800
jacobian (fp3, trap2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1808
jacobian (fp3, di) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1816
jacobian (fp3, si) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1824
jacobian (fp3, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1832
jacobian (fp3, fp1) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1840
jacobian (fp3, fp2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1848
jacobian (fp3, fp3) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1856
jacobian (fp3, fp4) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1864
jacobian (fp4, d) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (fp4, s) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1872
jacobian (fp4, dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1880
jacobian (fp4, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (fp4, trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1888
jacobian (fp4, di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1896
jacobian (fp4, si) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1904
jacobian (fp4, gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1912
jacobian (fp4, fp1) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1920
jacobian (fp4, fp2) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST) react_ptr = 1928
jacobian (fp4, fp3) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1936
jacobian (fp4, fp4) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1944
jacobian (flow(di,si), dt) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (flow(di,si), trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (flow(di,si), trap2) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (flow(di,si), di) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1952
jacobian (flow(di,si), si) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1960
jacobian (flow(di,si), gi) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT) react_ptr = 1968
jacobian (flow(di,si), flow(di,si)) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_RESIST_CONST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (implicit_equation_0, trap1) JacobianFlags(JACOBIAN_ENTRY_RESIST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 4294967295
jacobian (implicit_equation_0, implicit_equation_0) JacobianFlags(JACOBIAN_ENTRY_REACT | JACOBIAN_ENTRY_RESIST_CONST | JACOBIAN_ENTRY_REACT_CONST) react_ptr = 1976
collapsible (implicit_equation_0, gnd)
collapsible (dt, gnd)
collapsible (trap1, gnd)
collapsible (trap2, gnd)
collapsible (d, fp4)
collapsible (si, s)
collapsible (fp1, di)
collapsible (fp2, fp1)
collapsible (fp3, fp2)
collapsible (fp4, fp3)
collapsible (g, gi)
noise "flicker" (flow(di,si), gnd)
noise "thermal" (flow(di,si), gnd)
noise "shot" (gi, si)
noise "shot" (gi, di)
noise "thermal" (d, fp4)
noise "thermal" (si, s)
0 states
has bound_step false
instance size 4512
model size 1608
